// automatically generated by the FlatBuffers compiler, do not modify

package edu.ptu.javatest._80_storage._80_file._04_probuf;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class FbHello extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_1_12_0(); }
  public static FbHello getRootAsFbHello(ByteBuffer _bb) { return getRootAsFbHello(_bb, new FbHello()); }
  public static FbHello getRootAsFbHello(ByteBuffer _bb, FbHello obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public FbHello __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public String name() { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer nameAsByteBuffer() { return __vector_as_bytebuffer(4, 1); }
  public ByteBuffer nameInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 4, 1); }

  public static int createFbHello(FlatBufferBuilder builder,
      int nameOffset) {
    builder.startTable(1);
    FbHello.addName(builder, nameOffset);
    return FbHello.endFbHello(builder);
  }

  public static void startFbHello(FlatBufferBuilder builder) { builder.startTable(1); }
  public static void addName(FlatBufferBuilder builder, int nameOffset) { builder.addOffset(0, nameOffset, 0); }
  public static int endFbHello(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }
  public static void finishFbHelloBuffer(FlatBufferBuilder builder, int offset) { builder.finish(offset); }
  public static void finishSizePrefixedFbHelloBuffer(FlatBufferBuilder builder, int offset) { builder.finishSizePrefixed(offset); }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public FbHello get(int j) { return get(new FbHello(), j); }
    public FbHello get(FbHello obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

